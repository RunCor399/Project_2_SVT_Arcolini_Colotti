from colorama import Fore

class Logger: 
    '''
    Visual banner for the script.
    '''
    
    def __init__(self) -> None:
        self.header = '''
        ==============================================================================================================================
                                  _______      ________    ___   ___ ___  ___      ___   ___  _____  ___   ___  
                                 / ____\ \    / /  ____|  |__ \ / _ \__ \|__ \    |__ \ / _ \| ____|/ _ \ / _ \ 
                                | |     \ \  / /| |__ ______ ) | | | | ) |  ) |_____ ) | (_) | |__ | (_) | (_) |
                                | |      \ \/ / |  __|______/ /| | | |/ /  / /______/ / > _ <|___ \ > _ < > _ < 
                                | |____   \  /  | |____    / /_| |_| / /_ / /_     / /_| (_) |___) | (_) | (_) |
                                 \_____|   \/   |______|  |____|\___/____|____|   |____|\___/|____/ \___/ \___/ 
                                                                                                        
        ==============================================================================================================================
        In SpringBootMovie <=1.2 when adding movie names, malicious code can be stored because there are no filtering parameters, 
        resulting in stored XSS.

        This script contains a verbose exploit script used as a Proof of Concept (PoC) for the CVE-2022-28588. More detailed information 
        can be found at: https://github.com/RunCor399/Project_2_SVT_Arcolini_Colotti/.
        
        Contact: davide.arcolini@studenti.polito.it
         
        '''
        
        
    def print_banner(self) -> None:
        print(self.header)
        
    def log(self, message: str) -> None:
        print(Fore.CYAN + '[+] ' + Fore.RESET + message)
        return
    
    def success(self, message: str) -> None:
        print(Fore.GREEN + '[!] ' + Fore.RESET + message)
        return
    
    def warning(self, message: str) -> None:
        print(Fore.RED + '[!] ' + Fore.RESET + message)
        return
    
    def request(self, verb: str, endpoint: str) -> None:
        print('    ' + Fore.CYAN + f'{verb} {endpoint}')
        return